#!/usr/bin/env python
# -*- encoding: utf-8 -*-
# vim: set et sw=4 ts=4 sts=4 ff=unix fenc=utf8:
# Author: Binux<i@binux.me>
#     http://binux.me
# Created on 2014-02-16 23:12:48
import re
import urllib
import uuid
import time
import json
from suds.client import Client
import MySQLdb
import torndb

image_server="http://192.168.56.104:8765/"
url = 'http://sync.ycapp.yiche.com/Services/OtherNewSyncsvr.asmx?WSDL'
#client = Client(url)

def extract_info(detail):
    ori_images = detail["images"]
    try:
        params = urllib.urlencode({"images":json.dumps(ori_images)})
        page = urllib.urlopen("%s?%s" % (image_server, params))
        rep = page.read()
        new_images = json.loads(rep)
        for i in range(0, len(ori_images)):
            detail["news"] = detail["news"].replace(ori_images[i], new_images[i])
    except Exception, e:
        rep = ori_images
    detail["images"] = rep
    id = str(uuid.uuid1())  
    content = json.dumps(detail)
    time_stamp = time.time()
    if save_news(id, content, time_stamp):
        print "save"
        #send_uuid(id)
    return detail

sql = "insert into news (id, content, time) values (%s, %s, %s)"
def save_news(id, content, time_stamp):
    page = urllib.urlopen("http://192.168.56.104:8764/?images=startsave")
    rep = page.read()
    try:
        db = torndb.Connection("192.168.56.104", "resultdb", "spider", "yiche123")
        db.insert(sql, id, content, time_stamp)
        db.close()
        return True
    except Exception, e:
        return False

def send_uuid(id):  
    client.service.recevieMessage("""<Messages>
        <Header>
            <AppId>501</AppId>
            <EntityType>other_news</EntityType>
            <OperateType>Add</OperateType>
        </Header>
        <Body>
            <EntityId>%s</EntityId>
        </Body>
    </Messages>"""%id)

def clean(h):
    r = re.compile(r'[\r\n\t]')
    h = r.sub('',h)
    r = re.compile(r'</?a.+?>')
    h = r.sub('',h)
    r = re.compile(r'<!--.*?-->')
    h = r.sub('',h)
    r = re.compile(r'<script>.*?</script>')
    h = r.sub('',h)
    r = re.compile(r'&#\d+;')
    h = r.sub('',h)
    r = re.compile(r'</?div.*?>')
    h = r.sub('',h)
    r = re.compile(r'</?personname.*?>')
    h = r.sub('',h)
    r = re.compile(r'</?b.*?>')
    h = r.sub('',h)
    r = re.compile(r'</?strong.*?>')
    h = r.sub('',h)
    r = re.compile(r'</?span.*?>')
    h = r.sub('',h)
    r = re.compile(r' (class|id|style|alt|data-link)=\".*?\"')
    h = r.sub('',h)
    r = re.compile(r'\s{2,}')
    h = r.sub('',h)
    r = re.compile(r'<p/>')
    h = r.sub('',h)
    r = re.compile(r'<p>\s*?</p>')
    h = r.sub('',h)
    r = re.compile(ur'\u3000')
    h = r.sub('',h)
    r = re.compile(ur'\u3000')
    h = r.sub('',h)
    r = re.compile(ur'\xa0')
    h = r.sub('',h)
    return h
